Q 10. Write a PROLOG program to implement memb(X, L): to check whether X is a member of L or not.


memb(X, [X|_]).


memb(X, [_|T]) :-
    memb(X, T).


run :-
    write('Enter the element X to check: '),
    read(X),
    write('Enter the list L: '),
    read(L),
    (memb(X, L) ->
        write(X), write(' is a member of the list.'), nl;
        write(X), write(' is not a member of the list.'), nl).






Q 11. Write a PROLOG program to implement sumlist(L, S) so that S is the sum of a given
list L.


sumlist([], 0).


sumlist([H|T], S) :-
    sumlist(T, S1),  
    S is H + S1.     


run :-
    write('Enter the list L: '),
    read(L),
    sumlist(L, S),
    write('The sum of the list is: '),
    write(S), nl.






Q 12. Write a PROLOG program to implement two predicates evenlength(List) and
oddlength(List) so that they are true if their argument is a list of even or odd length
Respectively.


% Base cases
evenlength([]) :- !.
oddlength([_]) :- !.

% Recursive cases with cut
evenlength([_,_|T]) :-
    evenlength(T), !.

oddlength([_,_|T]) :-
    oddlength(T), !.

% Main predicate to check the list length
run :-
    write('Enter a list (e.g., [1,2,3]): '),
    read(List),
    (   evenlength(List) ->
        write('The list has even length.'), nl, !
    ;   oddlength(List) ->
        write('The list has odd length.'), nl, !
    ).







Q 13. Write a PROLOG program to implement maxlist(L, M) so that M is the maximum
number in the list.


maxlist([M], M). 


maxlist([H|T], M) :-
    maxlist(T, TM),
    M is max(H, TM).


start :-
    write('Enter list (as a Prolog list, e.g., [1,2,3,4]): '),
    read(List),
    (   maxlist(List, M) -> write('The maximum number in the list is: '), write(M)
    ;   write('Invalid input.')
    ), nl.
