Q4 : Write a PROLOG program to calculate the sum of two numbers. 


sum(X,Y,S) :-
         S is X + Y.
run:-
    write('Enter first number: '), read(X),
    write('Enter second number: '), read(Y),
    sum(X,Y,S),
    write('Sum is: '), write(S).


Q5: Write a PROLOG program to implement max(X, Y, M) so that M is the maximum of two numbers X and Y.  


max(X, Y, M) :- 
X >= Y, !, M = X. 
max(_, Y, M) :- 
M = Y.
run :-
    write('Enter first number: '), read(X),
    write('Enter second number: '), read(Y),
    max(X, Y, M),
    write('Maximum is: '), write(M).


Q6: Write a program in PROLOG to implement factorial (N, F) where F represents the factorial of a number N. 


factorial(0, 1) :- !.
factorial(N, F) :-
    N > 0,
    N1 is N - 1,
    factorial(N1, F1),
    F is N * F1.


run :-
    write('Enter a number: '), read(N),
    factorial(N, F),
    write('Factorial is: '), write(F).


Q7: Write a program in PROLOG to implement generate_fib(N,T) where T represents the Nth term of the Fibonacci series.  


generate_fib(0, 0) :- !.
generate_fib(1, 1) :- !.
generate_fib(N, T) :-
    N > 1,
    N1 is N - 1, generate_fib(N1, T1),
    N2 is N - 2, generate_fib(N2, T2),
    T is T1 + T2.


run :-
    write('Enter the position: '), read(N),
    generate_fib(N, T),
    write('Fibonacci number is: '), write(T).


Q8: Write a PROLOG program to implement power (Num, Pow, Ans) : where Num is raised to the power Pow to get Ans.  


power(_, 0, 1) :- !.
power(Num, Pow, Ans) :-
    Pow > 0,
    Pow1 is Pow - 1,
    power(Num, Pow1, Ans1),
    Ans is Num * Ans1.


run :-
    write('Enter base number: '), read(Num),
    write('Enter power: '), read(Pow),
    power(Num, Pow, Ans),
    write('Result is: '), write(Ans).


Q9: PROLOG program to implement multi (N1, N2, R) : where N1 and N2 denotes the numbers to be multiplied and R represents the result.  


multi(N1,N2,R):-
R is N1 * N2.
run:-
    write('Enter first number: '), read(N1),
    write('Enter second number: '), read(N2),
   
    write('Multiplication result: '), write(R).
